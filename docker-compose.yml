version: '3.8'

services:
  # MongoDB Service
  mongo:
    image: mongo
    restart: always
    command: mongod --auth
    container_name: mongo
    ports:
      - '27017-27019:27017-27019'
    environment:
      - MONGO_INITDB_DATABASE=guitar-app
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://admin:root@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

  # Main Server Service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: server
    command: sh /app/start.sh
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

  # FFmpeg Server Service
  ffmpeg_server:
    build:
      context: ./ffmpeg_server
      dockerfile: Dockerfile
      target: production
    container_name: ffmpeg_server
    command: sh /app/start.sh
    ports:
      - "3001:3001"
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

  # Client Service
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
      target: production
    container_name: client
    ports:
      - "80:80"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    dns_search: .
    depends_on:
      - server
      - ffmpeg_server
    networks:
      - app-network

  # Service Discovery (Consul for local development)
  consul:
    image: consul:1.15
    container_name: consul
    ports:
      - "8500:8500"
    command: agent -server -bootstrap -ui -client=0.0.0.0
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: